<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects | RHDZMOTA</title>
    <link>/project/</link>
      <atom:link href="/project/index.xml" rel="self" type="application/rss+xml" />
    <description>Projects</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 30 Jan 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/images/icon_hu9f6e05f8bcaba17500fc7d1122d2da00_26301_512x512_fill_lanczos_center_3.png</url>
      <title>Projects</title>
      <link>/project/</link>
    </image>
    
    <item>
      <title>Dashboard Sars-Cov-2</title>
      <link>/project/dashboard-sars-cov-2-mx/</link>
      <pubDate>Sun, 30 Jan 2022 00:00:00 +0000</pubDate>
      <guid>/project/dashboard-sars-cov-2-mx/</guid>
      <description>&lt;p&gt;This is a simple dashboard tracker for new covid cases identified in Jalisco, Mexico.
The chart contains the following time-series:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Historical confirmed cases.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ma_short&lt;/code&gt;: 7-day moving average&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ma_long&lt;/code&gt;: 21-day moving average&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe
src=&#39;https://share.streamlit.io/rhdzmota/sars-cov-2-mx/main/dashboard.py?embed=true&#39;
height=&#34;750&#34;
width=&#34;100%&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;This project consists of two parts: &lt;code&gt;data-retrieval&lt;/code&gt;, &lt;code&gt;data-visualization&lt;/code&gt;.
A python module called 
&lt;a href=&#34;https://github.com/RHDZMOTA/sars-cov-2-mx/tree/main/sars_cov_2_mx&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sars_cov_2_mx&lt;/a&gt; was developed to share common abstractions among the two parts.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Data Retrieval&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The raw data is retrieved from an 
&lt;a href=&#34;https://datos.covid-19.conacyt.mx/#DownZCSV&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;official mexican source&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;A python process is executed in a cloud environment (Heroku) to download the latest data available an update a Github Gist.
&lt;ul&gt;
&lt;li&gt;Python script 
&lt;a href=&#34;https://github.com/RHDZMOTA/sars-cov-2-mx/blob/main/update_gist.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Github gist with latest findings 
&lt;a href=&#34;https://gist.github.com/RHDZMOTA/6c7c16c62d7cea9b3e63eb4dce8e2713&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Execution frequency: daily at 03:00 AM UTC&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Data Visualization&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The sars_cov_2_mx module contains utility python functions to download the latest data from the github gist (
&lt;a href=&#34;https://github.com/RHDZMOTA/sars-cov-2-mx/blob/main/sars_cov_2_mx/dataset.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;A simple interactive dashboard (
&lt;a href=&#34;https://github.com/RHDZMOTA/sars-cov-2-mx/blob/main/dashboard.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;) hosted in 
&lt;a href=&#34;https://share.streamlit.io/rhdzmota/sars-cov-2-mx/main/dashboard.py&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;streamlit&lt;/a&gt; facilitated visualizing the results.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Minesweeper Solver</title>
      <link>/project/minesweeper/</link>
      <pubDate>Thu, 06 Jan 2022 00:00:00 +0000</pubDate>
      <guid>/project/minesweeper/</guid>
      <description>&lt;p&gt;This simple python implementation is able to infer the solution from a minesweeper board. Consider the following board configuration:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://imgs.xkcd.com/comics/mine_captcha.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;We can respresent that board on the commandline by using a &lt;code&gt;[.]&lt;/code&gt; notation. You should be able to get a solution by running:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-commandline&#34;&gt;$ minesweeper --timeout 3 --grid &amp;quot;&amp;quot;&amp;quot;
[2] [?] [1] [?]
[?] [?] [3] [?]
[3] [?] [?] [?]
[?] [1] [?] [1]
&amp;quot;&amp;quot;&amp;quot;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Expected output:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;[2] [ ] [1] [ ]
[*] [*] [3] [ ]
[3] [*] [ ] [*]
[ ] [1] [ ] [1]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;Install this application using pip directly referencing the dev branch from github:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-commandline&#34;&gt;$ pip install git+https://github.com/rhdzmota/minesweeper.git@dev#subdirectory=minesweeper&amp;amp;egg=minesweeper
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alteratively, you can clone this repository and install the minesweeper package with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-commandline&#34;&gt;$ pip install -e minesweeper
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Verify correct installation by running: &lt;code&gt;minesweeper --help&lt;/code&gt; or &lt;code&gt;python -m minesweeper --help&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;cli-usage&#34;&gt;CLI Usage&lt;/h2&gt;
&lt;p&gt;Provide a grid with the following cell types:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[ ]&lt;/code&gt;: empty cell.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[?]&lt;/code&gt;: non-visible cell.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[*]&lt;/code&gt;: flagged cell.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[i]&lt;/code&gt;: cell with a number hint between 1 to 8 (e.g., [3], [1]).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can solve any board configuration by running the &lt;code&gt;--grid&lt;/code&gt; command:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-commandline&#34;&gt;$ minesweeper --timeout 3 --grid &amp;quot;&amp;quot;&amp;quot;
[3] [?] [2] [?]
[?] [?] [ ] [?]
&amp;quot;&amp;quot;&amp;quot;

Expected output:

```text
[3] [*] [2] [ ]
[*] [*] [ ] [ ]
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;package-usage&#34;&gt;Package Usage&lt;/h2&gt;
&lt;p&gt;Once installed, you can also use this application as a python library.&lt;/p&gt;
&lt;p&gt;Create a simple board:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from minesweeper.board import Grid, Cell

my_grid = Grid(
    values=[
        [Cell.num(2), Cell.unk(), Cell.num(1), Cell.unk()],
        [Cell.unk(), Cell.unk(), Cell.num(3), Cell.unk()],
        [Cell.num(3), Cell.unk(), Cell.unk(), Cell.unk()],
        [Cell.unk(), Cell.num(1), Cell.unk(), Cell.num(1)]
    ]
)

my_grid.show()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can solve a grid by using the &lt;code&gt;Solver&lt;/code&gt; class:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from minesweeper.solver import Solver

solver = Solver(gird=my_grid)
solver.run(timeout=10)

if solver.finished():
  solution = solver.final_state
  solution.show()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
